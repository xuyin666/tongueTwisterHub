version: '3.8'

services:
  mongodb:
    image: mongo:5.0.5
    container_name: mongodb
    networks:
      - my_network
    volumes:
      - mongo-config:/etc/mongo
      - mongo-data:/data/db
      - mongo-cluster:/data/configdb
      - ./mongodb_data:/tmp_files
      - ./mongod.conf:/etc/mongo/mongod.conf
      - ./mongo-init.js:/docker-entrypoint-initdb.d/1-mongo-init.js
      - ./import-data-mongodb.sh:/docker-entrypoint-initdb.d/2-import-data-mongodb.sh
    restart: always
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root-init
      - MONGO_INITDB_ROOT_PASSWORD=root-init-passwd
      - MONGO_INITDB_DATABASE=admin
      - LANG=C.UTF-8
    command: mongod -f /etc/mongo/mongod.conf --auth
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 10s
      timeout: 5s
      retries: 3

  elasticsearch:
    build:
      context: ./elasticsearch
      dockerfile: Dockerfile  # 这里应该是你的 Dockerfile 的路径
    image: my-elasticsearch-image
    container_name: elasticsearch
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms250m -Xmx512m
    healthcheck:
      test: [ "CMD", "curl", "-s", "http://elasticsearch:9200" ]
      timeout: 30s
      retries: 10
    networks:
      - my_network

  kibana:
    image: kibana:7.17.3
    container_name: kibana
    ports:
      - "5601:5601"
    networks:
      - my_network
    depends_on:
      elasticsearch:
        condition: service_healthy

  nodewebserver:
    image: xuyin888/myexpressimage:latest
    container_name: nodewebserver
    env_file:
      - .env
    ports:
      - "3000:3000"
    networks:
      - my_network
    depends_on:
      mongodb:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-s", "http://nodewebserver:3000" ]
      timeout: 30s
      retries: 10

  vueApp:
    image: xuyin888/myvuenginximage:latest
    container_name: vueapp
    ports:
      - "8091:8091"
    volumes:
      - /home/roiyin/nginx_cert:/etc/nginx/certificates
      - /home/roiyin/alldatas/useful_data:/usr/share/nginx/useful_data
      - /home/roiyin/projects/tongueTwisterHub/raokouling_frontend/dist:/usr/share/nginx/html
    networks:
      - my_network
      - shared_network
    depends_on:
      nodewebserver:
        condition: service_healthy

networks:
  my_network:
  shared_network:
    external: true

volumes:
  mongo-config:
  mongo-data:
  mongo-cluster: